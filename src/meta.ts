// This file is generated by `vscode-ext-gen`. Do not modify manually.
// @see https://github.com/antfu/vscode-ext-gen

// Meta info
export const publisher = "ntnyq"
export const name = "vscode-magic-comment"
export const version = "0.0.3"
export const displayName = "VSCode Magic Comment"
export const description = "Add annotations to magic comments"
export const extensionId = `${publisher}.${name}`

/**
 * Type union of all commands
 */
export type CommandKey = 
  | "magic-comment.getLanguageConfig"

/**
 * Commands map registed by `ntnyq.vscode-magic-comment`
 */
export const commands = {
  /**
   * getLanguageConfig
   * @value `magic-comment.getLanguageConfig`
   */
  getLanguageConfig: "magic-comment.getLanguageConfig",
} satisfies Record<string, CommandKey>

/**
 * Type union of all configs
 */
export type ConfigKey = 
  | "magic-comment.annotation"
  | "magic-comment.customMagicComments"
  | "magic-comment.disabledCategories"
  | "magic-comment.disabledNames"
  | "magic-comment.enable"
  | "magic-comment.ignorePaths"
  | "magic-comment.languages"

export interface ConfigKeyTypeMap {
  "magic-comment.annotation": { 'after'?: { 'contentText'?: string; 'margin'?: string }; 'color'?: string },
  "magic-comment.customMagicComments": { 'category'?: string; 'description'?: string; 'name': string; 'patterns': unknown; 'url'?: string }[],
  "magic-comment.disabledCategories": string[],
  "magic-comment.disabledNames": string[],
  "magic-comment.enable": boolean,
  "magic-comment.ignorePaths": string[],
  "magic-comment.languages": string[],
}

export interface ConfigShorthandMap {
  annotation: "magic-comment.annotation",
  customMagicComments: "magic-comment.customMagicComments",
  disabledCategories: "magic-comment.disabledCategories",
  disabledNames: "magic-comment.disabledNames",
  enable: "magic-comment.enable",
  ignorePaths: "magic-comment.ignorePaths",
  languages: "magic-comment.languages",
}

export interface ConfigShorthandTypeMap {
  annotation: { 'after'?: { 'contentText'?: string; 'margin'?: string }; 'color'?: string },
  customMagicComments: { 'category'?: string; 'description'?: string; 'name': string; 'patterns': unknown; 'url'?: string }[],
  disabledCategories: string[],
  disabledNames: string[],
  enable: boolean,
  ignorePaths: string[],
  languages: string[],
}

export interface ConfigItem<T extends keyof ConfigKeyTypeMap> {
  key: T,
  default: ConfigKeyTypeMap[T],
}


/**
 * Configs map registered by `ntnyq.vscode-magic-comment`
 */
export const configs = {
  /**
   * Magic comment annotation
   * @key `magic-comment.annotation`
   * @default `{ "after": { "contentText": "ðŸš€", "margin": "0 0 0 0.5em" }, "color": "rgb(255, 189, 42)" }`
   * @type `object`
   */
  annotation: {
    key: "magic-comment.annotation",
    default: { "after": { "contentText": "ðŸš€", "margin": "0 0 0 0.5em" }, "color": "rgb(255, 189, 42)" },
  } as ConfigItem<"magic-comment.annotation">,
  /**
   * User defined magic comments
   * @key `magic-comment.customMagicComments`
   * @default `[]`
   * @type `array`
   */
  customMagicComments: {
    key: "magic-comment.customMagicComments",
    default: [],
  } as ConfigItem<"magic-comment.customMagicComments">,
  /**
   * Disabled by comments category
   * @key `magic-comment.disabledCategories`
   * @default `[]`
   * @type `array`
   */
  disabledCategories: {
    key: "magic-comment.disabledCategories",
    default: [],
  } as ConfigItem<"magic-comment.disabledCategories">,
  /**
   * Disabled by comments name
   * @key `magic-comment.disabledNames`
   * @default `[]`
   * @type `array`
   */
  disabledNames: {
    key: "magic-comment.disabledNames",
    default: [],
  } as ConfigItem<"magic-comment.disabledNames">,
  /**
   * Enable extension
   * @key `magic-comment.enable`
   * @default `true`
   * @type `boolean`
   */
  enable: {
    key: "magic-comment.enable",
    default: true,
  } as ConfigItem<"magic-comment.enable">,
  /**
   * Ignored paths pattern
   * @key `magic-comment.ignorePaths`
   * @default `[]`
   * @type `array`
   */
  ignorePaths: {
    key: "magic-comment.ignorePaths",
    default: [],
  } as ConfigItem<"magic-comment.ignorePaths">,
  /**
   * Enabled by language ids
   * @key `magic-comment.languages`
   * @default `["javascript","javascriptreact","markdown","typescript","typescriptreact"]`
   * @type `array`
   */
  languages: {
    key: "magic-comment.languages",
    default: ["javascript","javascriptreact","markdown","typescript","typescriptreact"],
  } as ConfigItem<"magic-comment.languages">,
}

export interface ScopedConfigKeyTypeMap {
  "annotation": { 'after'?: { 'contentText'?: string; 'margin'?: string }; 'color'?: string },
  "customMagicComments": { 'category'?: string; 'description'?: string; 'name': string; 'patterns': unknown; 'url'?: string }[],
  "disabledCategories": string[],
  "disabledNames": string[],
  "enable": boolean,
  "ignorePaths": string[],
  "languages": string[],
}

export const scopedConfigs = {
  scope: "magic-comment",
  defaults: {
    "annotation": { "after": { "contentText": "ðŸš€", "margin": "0 0 0 0.5em" }, "color": "rgb(255, 189, 42)" },
    "customMagicComments": [],
    "disabledCategories": [],
    "disabledNames": [],
    "enable": true,
    "ignorePaths": [],
    "languages": ["javascript","javascriptreact","markdown","typescript","typescriptreact"],
  } satisfies ScopedConfigKeyTypeMap,
}

export interface NestedConfigs {
  "magic-comment": {
    "annotation": { 'after'?: { 'contentText'?: string; 'margin'?: string }; 'color'?: string },
    "customMagicComments": { 'category'?: string; 'description'?: string; 'name': string; 'patterns': unknown; 'url'?: string }[],
    "disabledCategories": string[],
    "disabledNames": string[],
    "enable": boolean,
    "ignorePaths": string[],
    "languages": string[],
  },
}

export interface NestedScopedConfigs {
  "annotation": { 'after'?: { 'contentText'?: string; 'margin'?: string }; 'color'?: string },
  "customMagicComments": { 'category'?: string; 'description'?: string; 'name': string; 'patterns': unknown; 'url'?: string }[],
  "disabledCategories": string[],
  "disabledNames": string[],
  "enable": boolean,
  "ignorePaths": string[],
  "languages": string[],
}

